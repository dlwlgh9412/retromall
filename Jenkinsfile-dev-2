pipeline {
    agent any

    environment {
        registryUrl = 'dlwlgh9412'
        imageName = 'retromall'
        version = '0.1'
        credentialsId = 'dockerhub-id'
        workDir = "/home/ubuntu/retromall"
    }
    stages {
        stage("build jar") {
            steps {
                // 프로젝트 빌드
                sh './gradlew build -x test'
            }
        }

        stage ('build docker image') {
            steps {
                script {
                    dockerImage = docker.build("${registryUrl}/${imageName}:${version}", "--build-arg TARGET=${imageName}-${version} .")
                }
            }
        }

        stage ('tag docker image') {
            steps {
                script {
                    docker.withRegistry('https://registry.hub.docker.com', credentialsId) {
                        docker.image("${registryUrl}/${imageName}:${version}").push()
                    }
                }
            }
        }
        
        stage('deploy') {
            steps {
                sshagent(credentials: ['ubuntu-server']) {
                    withCredentials([usernamePassword(credentialsId: 'dockerhub-id', usernameVariable: 'DOCKER_USERNAME', passwordVariable: 'DOCKER_PASSWORD')]) {
                        sshCommand remote: 'your-remote-server', command: """
                            docker login -u ${DOCKER_USERNAME} -p ${DOCKER_PASSWORD} &&
                            docker pull ${registryUrl}/${imageName}:${version} &&
                            cd /path/to/your/script/directory &&
                            sh your-script.sh
                        """
                    }
                }
            }
        }


        // stage ('deploy') {
        //     steps {
        //         sshagent(credentials: ['ubuntu-server']) {
                    // withCredentials([usernamePassword(credentialsId: credentialsId, usernameVariable: 'DOCKER_USERNAME', passwordVariable: 'DOCKER_PASSWORD')]) {
        //                 sh "docker login -u ${DOCKER_USERNAME} -p ${DOCKER_PASSWORD}"
        //                 sh "docker pull ${registryUrl}/${imageName}:${version}"
        //                 script {
        //                     dir(workDir) {
        //                         sh "sh dev.sh ${imageName} ${version}"
        //                     }
        //                 }
        //             }
        //         }
        //     }
        // }
    }
}